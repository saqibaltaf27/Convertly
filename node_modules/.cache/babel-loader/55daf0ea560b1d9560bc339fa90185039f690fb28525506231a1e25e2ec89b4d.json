{"ast":null,"code":"var _jsxFileName = \"E:\\\\FileConverter\\\\frontend\\\\src\\\\pages\\\\ExcelToWord.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExcelToWord() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadUrl, setDownloadUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleConvert = async () => {\n    if (!file) return alert(\"Select an Excel file\");\n    setIsLoading(true);\n    const form = new FormData();\n    form.append(\"file\", file);\n    try {\n      const res = await fetch(\"http://localhost:5000/excel-to-word\", {\n        method: \"POST\",\n        body: form\n      });\n      const data = await res.json();\n      setDownloadUrl(\"http://localhost:5000\" + data.download_url);\n    } catch (e) {\n      console.error(e);\n      alert(\"Conversion failed\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen pt-24 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-white rounded-2xl shadow-lg p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-blue-700 mb-4\",\n        children: \"Excel to Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xls,.xlsx\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConvert,\n        className: \"bg-blue-600 text-white px-6 py-2 rounded mt-4\",\n        disabled: isLoading,\n        children: isLoading ? \"Converting...\" : \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadUrl,\n        download: true,\n        className: \"block mt-4 bg-green-600 text-white px-6 py-2 rounded text-center\",\n        children: \"Download Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcelToWord, \"1lGgcNQ3531Sd7iEZK2JTnaMZh4=\");\n_c = ExcelToWord;\nvar _c;\n$RefreshReg$(_c, \"ExcelToWord\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExcelToWord","_s","file","setFile","downloadUrl","setDownloadUrl","isLoading","setIsLoading","handleConvert","alert","form","FormData","append","res","fetch","method","body","data","json","download_url","e","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","target","files","onClick","disabled","href","download","_c","$RefreshReg$"],"sources":["E:/FileConverter/frontend/src/pages/ExcelToWord.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ExcelToWord() {\r\n  const [file, setFile] = useState(null);\r\n  const [downloadUrl, setDownloadUrl] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleConvert = async () => {\r\n    if (!file) return alert(\"Select an Excel file\");\r\n    setIsLoading(true);\r\n    const form = new FormData();\r\n    form.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/excel-to-word\", {\r\n        method: \"POST\",\r\n        body: form\r\n      });\r\n      const data = await res.json();\r\n      setDownloadUrl(\"http://localhost:5000\" + data.download_url);\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(\"Conversion failed\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen pt-24 px-6\">\r\n      <div className=\"max-w-3xl mx-auto bg-white rounded-2xl shadow-lg p-8\">\r\n        <h1 className=\"text-3xl font-bold text-blue-700 mb-4\">Excel to Word</h1>\r\n\r\n        <input type=\"file\" accept=\".xls,.xlsx\" onChange={(e)=>setFile(e.target.files[0])}/>\r\n        <button onClick={handleConvert}\r\n          className=\"bg-blue-600 text-white px-6 py-2 rounded mt-4\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? \"Converting...\" : \"Convert\"}\r\n        </button>\r\n\r\n        {downloadUrl && (\r\n          <a href={downloadUrl} download\r\n            className=\"block mt-4 bg-green-600 text-white px-6 py-2 rounded text-center\">\r\n            Download Word\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACN,IAAI,EAAE,OAAOO,KAAK,CAAC,sBAAsB,CAAC;IAC/CF,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMG,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;IAEzB,IAAI;MACF,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7Bb,cAAc,CAAC,uBAAuB,GAAGY,IAAI,CAACE,YAAY,CAAC;IAC7D,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChBX,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA;IAAKwB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtCzB,OAAA;MAAKwB,SAAS,EAAC,sDAAsD;MAAAC,QAAA,gBACnEzB,OAAA;QAAIwB,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAExE7B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,YAAY;QAACC,QAAQ,EAAGX,CAAC,IAAGjB,OAAO,CAACiB,CAAC,CAACY,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnF7B,OAAA;QAAQmC,OAAO,EAAE1B,aAAc;QAC7Be,SAAS,EAAC,+CAA+C;QACzDY,QAAQ,EAAE7B,SAAU;QAAAkB,QAAA,EAEnBlB,SAAS,GAAG,eAAe,GAAG;MAAS;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EAERxB,WAAW,iBACVL,OAAA;QAAGqC,IAAI,EAAEhC,WAAY;QAACiC,QAAQ;QAC5Bd,SAAS,EAAC,kEAAkE;QAAAC,QAAA,EAAC;MAE/E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CAhDuBD,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}