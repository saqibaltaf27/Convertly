{"ast":null,"code":"var _jsxFileName = \"E:\\\\FileConverter\\\\frontend\\\\src\\\\pages\\\\PdfToWord.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PdfToWord() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadUrl, setDownloadUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleConvert = async () => {\n    if (!file) {\n      alert(\"Select a PDF file first\");\n      return;\n    }\n    setIsLoading(true);\n    setMessage(\"\"); // Clear any previous messages\n    setDownloadUrl(null); // Clear previous download URL\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await fetch(\"http://localhost:5000/pdf-to-word\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setDownloadUrl(\"http://localhost:5000\" + data.download_url);\n        setMessage(\"Conversion successful! Your file is ready to download.\");\n      } else {\n        setMessage(data.error || \"Conversion failed.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setMessage(\"Conversion failed due to a network error.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-blue-50 to-white pt-24 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-blue-700 mb-4\",\n        children: \"PDF to Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-10\",\n        children: \"Convert your PDFs to editable Word format.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-2xl shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: e => {\n            setFile(e.target.files[0]);\n            setMessage(\"\"); // Clear message when a new file is selected\n            setDownloadUrl(null); // Clear download link\n          },\n          className: \"block mx-auto mb-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), file && !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConvert,\n          className: \"px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700\",\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-blue-600 mt-4\",\n          children: \"Converting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 ${res.ok ? 'text-green-600' : 'text-red-600'}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: downloadUrl,\n          download: true,\n          className: \"mt-4 inline-block px-6 py-3 bg-green-600 text-white rounded-xl hover:bg-green-700\",\n          children: \"Download Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfToWord, \"Uxb9xZVzcEMK6R5Tqm9K38aga/Q=\");\n_c = PdfToWord;\nvar _c;\n$RefreshReg$(_c, \"PdfToWord\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfToWord","_s","file","setFile","downloadUrl","setDownloadUrl","isLoading","setIsLoading","message","setMessage","handleConvert","alert","formData","FormData","append","res","fetch","method","body","data","json","ok","download_url","error","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","href","download","_c","$RefreshReg$"],"sources":["E:/FileConverter/frontend/src/pages/PdfToWord.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function PdfToWord() {\r\n  const [file, setFile] = useState(null);\r\n  const [downloadUrl, setDownloadUrl] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleConvert = async () => {\r\n    if (!file) {\r\n      alert(\"Select a PDF file first\");\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setMessage(\"\"); // Clear any previous messages\r\n    setDownloadUrl(null); // Clear previous download URL\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/pdf-to-word\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setDownloadUrl(\"http://localhost:5000\" + data.download_url);\r\n        setMessage(\"Conversion successful! Your file is ready to download.\");\r\n      } else {\r\n        setMessage(data.error || \"Conversion failed.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage(\"Conversion failed due to a network error.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-blue-50 to-white pt-24 px-6\">\r\n      <div className=\"max-w-3xl mx-auto text-center\">\r\n        <h1 className=\"text-4xl font-bold text-blue-700 mb-4\">PDF to Word</h1>\r\n        <p className=\"text-gray-600 mb-10\">Convert your PDFs to editable Word format.</p>\r\n        \r\n        <div className=\"bg-white p-8 rounded-2xl shadow-lg\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf\"\r\n            onChange={(e) => {\r\n              setFile(e.target.files[0]);\r\n              setMessage(\"\"); // Clear message when a new file is selected\r\n              setDownloadUrl(null); // Clear download link\r\n            }}\r\n            className=\"block mx-auto mb-6\"\r\n          />\r\n          {file && !isLoading && (\r\n            <button\r\n              onClick={handleConvert}\r\n              className=\"px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700\"\r\n            >\r\n              Convert\r\n            </button>\r\n          )}\r\n          {isLoading && <div className=\"text-blue-600 mt-4\">Converting...</div>}\r\n          \r\n          {/* Display the message here */}\r\n          {message && (\r\n            <div className={`mt-4 ${res.ok ? 'text-green-600' : 'text-red-600'}`}>\r\n              {message}\r\n            </div>\r\n          )}\r\n\r\n          {downloadUrl && (\r\n            <a\r\n              href={downloadUrl}\r\n              download\r\n              className=\"mt-4 inline-block px-6 py-3 bg-green-600 text-white rounded-xl hover:bg-green-700\"\r\n            >\r\n              Download Word\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}