{"ast":null,"code":"var _jsxFileName = \"E:\\\\FileConverter\\\\frontend\\\\src\\\\pages\\\\CompressPdf.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ConversionPage from \"../components/ConversionPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CompressPdf() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [targetSize, setTargetSize] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [downloadUrl, setDownloadUrl] = useState(null);\n  const handleConvert = async () => {\n    if (!file || !targetSize) return alert(\"Please set a target size\");\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"target_size_kb\", targetSize);\n    try {\n      const res = await fetch(\"http://localhost:5000/compress-pdf\", {\n        method: \"POST\",\n        body: formData\n      });\n      const blob = await res.blob();\n      const url = window.URL.createObjectURL(blob);\n      setDownloadUrl(url);\n      setIsLoading(false);\n      setProgress(100);\n    } catch (err) {\n      console.error(err);\n      alert(\"Compression failed\");\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ConversionPage, {\n    title: \"Compress PDF\",\n    description: \"Reduce your PDF file size without losing quality. Fast and secure.\",\n    accept: \".pdf\",\n    onFileChange: e => setFile(e.target.files[0]),\n    onConvert: handleConvert,\n    file: file,\n    isLoading: isLoading,\n    progress: progress,\n    downloadUrl: downloadUrl,\n    downloadLabel: \"Download Compressed PDF\",\n    extraInput: file && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter target size (KB)\",\n      className: \"border border-gray-300 rounded-lg px-4 py-2 mb-4 w-full\",\n      value: targetSize,\n      onChange: e => setTargetSize(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(CompressPdf, \"wTbHXOH6UTFHXj+a+5yIGRnRWf4=\");\n_c = CompressPdf;\nvar _c;\n$RefreshReg$(_c, \"CompressPdf\");","map":{"version":3,"names":["React","useState","ConversionPage","jsxDEV","_jsxDEV","CompressPdf","_s","file","setFile","targetSize","setTargetSize","isLoading","setIsLoading","progress","setProgress","downloadUrl","setDownloadUrl","handleConvert","alert","formData","FormData","append","res","fetch","method","body","blob","url","window","URL","createObjectURL","err","console","error","title","description","accept","onFileChange","e","target","files","onConvert","downloadLabel","extraInput","type","placeholder","className","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/FileConverter/frontend/src/pages/CompressPdf.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ConversionPage from \"../components/ConversionPage\";\r\n\r\nexport default function CompressPdf() {\r\n  const [file, setFile] = useState(null);\r\n  const [targetSize, setTargetSize] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [downloadUrl, setDownloadUrl] = useState(null);\r\n\r\n  const handleConvert = async () => {\r\n    if (!file || !targetSize) return alert(\"Please set a target size\");\r\n    setIsLoading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"target_size_kb\", targetSize);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/compress-pdf\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const blob = await res.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      setDownloadUrl(url);\r\n\r\n      setIsLoading(false);\r\n      setProgress(100);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Compression failed\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ConversionPage\r\n      title=\"Compress PDF\"\r\n      description=\"Reduce your PDF file size without losing quality. Fast and secure.\"\r\n      accept=\".pdf\"\r\n      onFileChange={(e) => setFile(e.target.files[0])}\r\n      onConvert={handleConvert}\r\n      file={file}\r\n      isLoading={isLoading}\r\n      progress={progress}\r\n      downloadUrl={downloadUrl}\r\n      downloadLabel=\"Download Compressed PDF\"\r\n      extraInput={\r\n        file && (\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter target size (KB)\"\r\n            className=\"border border-gray-300 rounded-lg px-4 py-2 mb-4 w-full\"\r\n            value={targetSize}\r\n            onChange={(e) => setTargetSize(e.target.value)}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACV,IAAI,IAAI,CAACE,UAAU,EAAE,OAAOS,KAAK,CAAC,0BAA0B,CAAC;IAClEN,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEd,IAAI,CAAC;IAC7BY,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEZ,UAAU,CAAC;IAE7C,IAAI;MACF,MAAMa,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,CAAC,CAAC;MAC7B,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MAC5CV,cAAc,CAACW,GAAG,CAAC;MAEnBf,YAAY,CAAC,KAAK,CAAC;MACnBE,WAAW,CAAC,GAAG,CAAC;IAClB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBb,KAAK,CAAC,oBAAoB,CAAC;MAC3BN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA,CAACF,cAAc;IACbgC,KAAK,EAAC,cAAc;IACpBC,WAAW,EAAC,oEAAoE;IAChFC,MAAM,EAAC,MAAM;IACbC,YAAY,EAAGC,CAAC,IAAK9B,OAAO,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;IAChDC,SAAS,EAAExB,aAAc;IACzBV,IAAI,EAAEA,IAAK;IACXI,SAAS,EAAEA,SAAU;IACrBE,QAAQ,EAAEA,QAAS;IACnBE,WAAW,EAAEA,WAAY;IACzB2B,aAAa,EAAC,yBAAyB;IACvCC,UAAU,EACRpC,IAAI,iBACFH,OAAA;MACEwC,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,wBAAwB;MACpCC,SAAS,EAAC,yDAAyD;MACnEC,KAAK,EAAEtC,UAAW;MAClBuC,QAAQ,EAAGV,CAAC,IAAK5B,aAAa,CAAC4B,CAAC,CAACC,MAAM,CAACQ,KAAK;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAEJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN;AAAC9C,EAAA,CA3DuBD,WAAW;AAAAgD,EAAA,GAAXhD,WAAW;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}