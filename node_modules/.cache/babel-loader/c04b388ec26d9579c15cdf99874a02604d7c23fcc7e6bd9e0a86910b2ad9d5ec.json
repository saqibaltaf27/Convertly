{"ast":null,"code":"var _jsxFileName = \"E:\\\\FileConverter\\\\frontend\\\\src\\\\pages\\\\Services.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Services() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [target, setTarget] = useState(500);\n  const upload = async endpoint => {\n    const data = new FormData();\n    data.append(\"file\", file);\n    if (endpoint === \"compress-pdf\") data.append(\"target_kb\", target);\n    const res = await axios.post(`http://localhost:5000/${endpoint}`, data, {\n      responseType: \"blob\"\n    });\n    const url = window.URL.createObjectURL(new Blob([res.data]));\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"output.\" + (endpoint === \"word-to-excel\" ? \"xlsx\" : endpoint === \"excel-to-word\" ? \"docx\" : \"pdf\");\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold\",\n      children: \"Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => upload(\"compress-pdf\"),\n        className: \"bg-blue-500 text-white p-2\",\n        children: \"Compress PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: target,\n        onChange: e => setTarget(e.target.value),\n        className: \"border p-1 w-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \" KB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => upload(\"word-to-excel\"),\n        className: \"bg-green-500 text-white p-2\",\n        children: \"Word \\u2192 Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => upload(\"excel-to-word\"),\n        className: \"bg-purple-500 text-white p-2\",\n        children: \"Excel \\u2192 Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Services, \"gHDv2OiRCG1MPP48aY4tpt4uVKk=\");\n_c = Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["axios","useState","jsxDEV","_jsxDEV","Services","_s","file","setFile","target","setTarget","upload","endpoint","data","FormData","append","res","post","responseType","url","window","URL","createObjectURL","Blob","a","document","createElement","href","download","body","appendChild","click","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","files","onClick","value","_c","$RefreshReg$"],"sources":["E:/FileConverter/frontend/src/pages/Services.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Services() {\r\n  const [file, setFile] = useState(null);\r\n  const [target, setTarget] = useState(500);\r\n\r\n  const upload = async (endpoint) => {\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    if (endpoint === \"compress-pdf\") data.append(\"target_kb\", target);\r\n    const res = await axios.post(`http://localhost:5000/${endpoint}`, data, {\r\n      responseType: \"blob\"\r\n    });\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const a = document.createElement(\"a\");\r\n    a.href = url; a.download = \"output.\"+ (endpoint===\"word-to-excel\"?\"xlsx\": endpoint===\"excel-to-word\"?\"docx\":\"pdf\");\r\n    document.body.appendChild(a); a.click(); a.remove();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 space-y-4\">\r\n      <h2 className=\"text-2xl font-bold\">Services</h2>\r\n      <input type=\"file\" onChange={e=>setFile(e.target.files[0])}/>\r\n      <div className=\"space-x-2\">\r\n        <button onClick={()=>upload(\"compress-pdf\")} className=\"bg-blue-500 text-white p-2\">Compress PDF</button>\r\n        <input type=\"number\" value={target} onChange={e=>setTarget(e.target.value)} className=\"border p-1 w-20\" /> KB\r\n      </div>\r\n      <div className=\"space-x-2\">\r\n        <button onClick={()=>upload(\"word-to-excel\")} className=\"bg-green-500 text-white p-2\">Word → Excel</button>\r\n        <button onClick={()=>upload(\"excel-to-word\")} className=\"bg-purple-500 text-white p-2\">Excel → Word</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}