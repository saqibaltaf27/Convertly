{"ast":null,"code":"var _jsxFileName = \"E:\\\\FileConverter\\\\frontend\\\\src\\\\pages\\\\PdfEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PDFDocument } from 'pdf-lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PdfEditor() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [textToAdd, setTextToAdd] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setDownloadUrl(null);\n    setMessage(\"\");\n  };\n  const handleEditAndDownload = async () => {\n    if (!file) {\n      setMessage(\"Please select a file first.\");\n      return;\n    }\n    setIsLoading(true);\n    setMessage(\"Processing your PDF...\");\n    try {\n      // 1. Load the PDF file into a buffer\n      const existingPdfBytes = await file.arrayBuffer();\n      const pdfDoc = await PDFDocument.load(existingPdfBytes);\n\n      // 2. Get the pages from the document\n      const pages = pdfDoc.getPages();\n      const firstPage = pages[0];\n\n      // 3. Add text to the first page\n      if (textToAdd) {\n        firstPage.drawText(textToAdd, {\n          x: 50,\n          y: firstPage.getHeight() - 50,\n          // Position text 50px from top\n          size: 20,\n          font: await pdfDoc.embedFont('Helvetica-Bold'),\n          color: PDFDocument.fromRgb(0.2, 0.4, 0.6)\n        });\n      } else {\n        setMessage(\"Please enter some text to add.\");\n        setIsLoading(false);\n        return;\n      }\n\n      // 4. Save the modified document\n      const modifiedPdfBytes = await pdfDoc.save();\n\n      // 5. Create a blob and a download URL\n      const blob = new Blob([modifiedPdfBytes], {\n        type: 'application/pdf'\n      });\n      const url = URL.createObjectURL(blob);\n      setDownloadUrl(url);\n      setMessage(\"PDF edited successfully! Click to download.\");\n    } catch (error) {\n      console.error(\"Failed to edit PDF:\", error);\n      setMessage(\"An error occurred during editing.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen pt-24 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-white rounded-2xl shadow-lg p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-blue-700 mb-4\",\n        children: \"PDF Text Adder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: \"Select a PDF and add text to it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: handleFileChange,\n          className: \"border p-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter text to add to the PDF\",\n          value: textToAdd,\n          onChange: e => setTextToAdd(e.target.value),\n          className: \"border p-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditAndDownload,\n          className: \"bg-blue-600 text-white px-6 py-2 rounded\",\n          disabled: isLoading || !file,\n          children: isLoading ? \"Processing...\" : \"Add Text and Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: downloadUrl ? \"text-green-600\" : \"text-red-600\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadUrl,\n        download: `edited-${file.name}`,\n        className: \"block mt-4 bg-green-600 text-white px-6 py-2 rounded text-center hover:bg-green-700 transition\",\n        children: \"Download Edited PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(PdfEditor, \"aral9oqS6x82Q30yneQ/rfANxRk=\");\n_c = PdfEditor;\nvar _c;\n$RefreshReg$(_c, \"PdfEditor\");","map":{"version":3,"names":["React","useState","PDFDocument","jsxDEV","_jsxDEV","PdfEditor","_s","file","setFile","textToAdd","setTextToAdd","downloadUrl","setDownloadUrl","isLoading","setIsLoading","message","setMessage","handleFileChange","e","target","files","handleEditAndDownload","existingPdfBytes","arrayBuffer","pdfDoc","load","pages","getPages","firstPage","drawText","x","y","getHeight","size","font","embedFont","color","fromRgb","modifiedPdfBytes","save","blob","Blob","type","url","URL","createObjectURL","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","placeholder","value","onClick","disabled","href","download","name","_c","$RefreshReg$"],"sources":["E:/FileConverter/frontend/src/pages/PdfEditor.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { PDFDocument } from 'pdf-lib';\r\n\r\nexport default function PdfEditor() {\r\n    const [file, setFile] = useState(null);\r\n    const [textToAdd, setTextToAdd] = useState(\"\");\r\n    const [downloadUrl, setDownloadUrl] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n        setDownloadUrl(null);\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const handleEditAndDownload = async () => {\r\n        if (!file) {\r\n            setMessage(\"Please select a file first.\");\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        setMessage(\"Processing your PDF...\");\r\n\r\n        try {\r\n            // 1. Load the PDF file into a buffer\r\n            const existingPdfBytes = await file.arrayBuffer();\r\n            const pdfDoc = await PDFDocument.load(existingPdfBytes);\r\n\r\n            // 2. Get the pages from the document\r\n            const pages = pdfDoc.getPages();\r\n            const firstPage = pages[0];\r\n\r\n            // 3. Add text to the first page\r\n            if (textToAdd) {\r\n                firstPage.drawText(textToAdd, {\r\n                    x: 50,\r\n                    y: firstPage.getHeight() - 50, // Position text 50px from top\r\n                    size: 20,\r\n                    font: await pdfDoc.embedFont('Helvetica-Bold'),\r\n                    color: PDFDocument.fromRgb(0.2, 0.4, 0.6)\r\n                });\r\n            } else {\r\n                setMessage(\"Please enter some text to add.\");\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n\r\n            // 4. Save the modified document\r\n            const modifiedPdfBytes = await pdfDoc.save();\r\n\r\n            // 5. Create a blob and a download URL\r\n            const blob = new Blob([modifiedPdfBytes], { type: 'application/pdf' });\r\n            const url = URL.createObjectURL(blob);\r\n            \r\n            setDownloadUrl(url);\r\n            setMessage(\"PDF edited successfully! Click to download.\");\r\n\r\n        } catch (error) {\r\n            console.error(\"Failed to edit PDF:\", error);\r\n            setMessage(\"An error occurred during editing.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen pt-24 px-6\">\r\n            <div className=\"max-w-3xl mx-auto bg-white rounded-2xl shadow-lg p-8\">\r\n                <h1 className=\"text-3xl font-bold text-blue-700 mb-4\">PDF Text Adder</h1>\r\n                <p className=\"text-gray-600 mb-4\">Select a PDF and add text to it.</p>\r\n\r\n                <div className=\"flex flex-col space-y-4\">\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\".pdf\"\r\n                        onChange={handleFileChange}\r\n                        className=\"border p-2 rounded\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter text to add to the PDF\"\r\n                        value={textToAdd}\r\n                        onChange={(e) => setTextToAdd(e.target.value)}\r\n                        className=\"border p-2 rounded\"\r\n                    />\r\n                    <button\r\n                        onClick={handleEditAndDownload}\r\n                        className=\"bg-blue-600 text-white px-6 py-2 rounded\"\r\n                        disabled={isLoading || !file}\r\n                    >\r\n                        {isLoading ? \"Processing...\" : \"Add Text and Download\"}\r\n                    </button>\r\n                </div>\r\n                \r\n                {message && (\r\n                    <div className=\"mt-4 text-center\">\r\n                        <p className={downloadUrl ? \"text-green-600\" : \"text-red-600\"}>{message}</p>\r\n                    </div>\r\n                )}\r\n                \r\n                {downloadUrl && (\r\n                    <a\r\n                        href={downloadUrl}\r\n                        download={`edited-${file.name}`}\r\n                        className=\"block mt-4 bg-green-600 text-white px-6 py-2 rounded text-center hover:bg-green-700 transition\"\r\n                    >\r\n                        Download Edited PDF\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}